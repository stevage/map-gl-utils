// Automatically generated type file. 
import type { LayerRef } from './index';
export interface UtilsFuncs {
  setFillAntialias: (layer: LayerRef, value: any) => void,
  setFillOpacity: (layer: LayerRef, value: any) => void,
  setFillColor: (layer: LayerRef, value: any) => void,
  setFillOutlineColor: (layer: LayerRef, value: any) => void,
  setFillTranslate: (layer: LayerRef, value: any) => void,
  setFillTranslateAnchor: (layer: LayerRef, value: any) => void,
  setFillPattern: (layer: LayerRef, value: any) => void,
  setFillEmissiveStrength: (layer: LayerRef, value: any) => void,
  setFillZOffset: (layer: LayerRef, value: any) => void,
  setFillExtrusionOpacity: (layer: LayerRef, value: any) => void,
  setFillExtrusionColor: (layer: LayerRef, value: any) => void,
  setFillExtrusionTranslate: (layer: LayerRef, value: any) => void,
  setFillExtrusionTranslateAnchor: (layer: LayerRef, value: any) => void,
  setFillExtrusionPattern: (layer: LayerRef, value: any) => void,
  setFillExtrusionHeight: (layer: LayerRef, value: any) => void,
  setFillExtrusionBase: (layer: LayerRef, value: any) => void,
  setFillExtrusionHeightAlignment: (layer: LayerRef, value: any) => void,
  setFillExtrusionBaseAlignment: (layer: LayerRef, value: any) => void,
  setFillExtrusionVerticalGradient: (layer: LayerRef, value: any) => void,
  setFillExtrusionAmbientOcclusionIntensity: (layer: LayerRef, value: any) => void,
  setFillExtrusionAmbientOcclusionRadius: (layer: LayerRef, value: any) => void,
  setFillExtrusionAmbientOcclusionWallRadius: (layer: LayerRef, value: any) => void,
  setFillExtrusionAmbientOcclusionGroundRadius: (layer: LayerRef, value: any) => void,
  setFillExtrusionAmbientOcclusionGroundAttenuation: (layer: LayerRef, value: any) => void,
  setFillExtrusionFloodLightColor: (layer: LayerRef, value: any) => void,
  setFillExtrusionFloodLightIntensity: (layer: LayerRef, value: any) => void,
  setFillExtrusionFloodLightWallRadius: (layer: LayerRef, value: any) => void,
  setFillExtrusionFloodLightGroundRadius: (layer: LayerRef, value: any) => void,
  setFillExtrusionFloodLightGroundAttenuation: (layer: LayerRef, value: any) => void,
  setFillExtrusionVerticalScale: (layer: LayerRef, value: any) => void,
  setFillExtrusionRoundedRoof: (layer: LayerRef, value: any) => void,
  setFillExtrusionCutoffFadeRange: (layer: LayerRef, value: any) => void,
  setFillExtrusionEmissiveStrength: (layer: LayerRef, value: any) => void,
  setFillExtrusionLineWidth: (layer: LayerRef, value: any) => void,
  setFillExtrusionCastShadows: (layer: LayerRef, value: any) => void,
  setLineOpacity: (layer: LayerRef, value: any) => void,
  setLineColor: (layer: LayerRef, value: any) => void,
  setLineTranslate: (layer: LayerRef, value: any) => void,
  setLineTranslateAnchor: (layer: LayerRef, value: any) => void,
  setLineWidth: (layer: LayerRef, value: any) => void,
  setLineGapWidth: (layer: LayerRef, value: any) => void,
  setLineOffset: (layer: LayerRef, value: any) => void,
  setLineBlur: (layer: LayerRef, value: any) => void,
  setLineDasharray: (layer: LayerRef, value: any) => void,
  setLinePattern: (layer: LayerRef, value: any) => void,
  setLineGradient: (layer: LayerRef, value: any) => void,
  setLineTrimOffset: (layer: LayerRef, value: any) => void,
  setLineTrimFadeRange: (layer: LayerRef, value: any) => void,
  setLineTrimColor: (layer: LayerRef, value: any) => void,
  setLineEmissiveStrength: (layer: LayerRef, value: any) => void,
  setLineBorderWidth: (layer: LayerRef, value: any) => void,
  setLineBorderColor: (layer: LayerRef, value: any) => void,
  setLineOcclusionOpacity: (layer: LayerRef, value: any) => void,
  setCircleRadius: (layer: LayerRef, value: any) => void,
  setCircleColor: (layer: LayerRef, value: any) => void,
  setCircleBlur: (layer: LayerRef, value: any) => void,
  setCircleOpacity: (layer: LayerRef, value: any) => void,
  setCircleTranslate: (layer: LayerRef, value: any) => void,
  setCircleTranslateAnchor: (layer: LayerRef, value: any) => void,
  setCirclePitchScale: (layer: LayerRef, value: any) => void,
  setCirclePitchAlignment: (layer: LayerRef, value: any) => void,
  setCircleStrokeWidth: (layer: LayerRef, value: any) => void,
  setCircleStrokeColor: (layer: LayerRef, value: any) => void,
  setCircleStrokeOpacity: (layer: LayerRef, value: any) => void,
  setCircleEmissiveStrength: (layer: LayerRef, value: any) => void,
  setHeatmapRadius: (layer: LayerRef, value: any) => void,
  setHeatmapWeight: (layer: LayerRef, value: any) => void,
  setHeatmapIntensity: (layer: LayerRef, value: any) => void,
  setHeatmapColor: (layer: LayerRef, value: any) => void,
  setHeatmapOpacity: (layer: LayerRef, value: any) => void,
  setIconOpacity: (layer: LayerRef, value: any) => void,
  setIconOcclusionOpacity: (layer: LayerRef, value: any) => void,
  setIconEmissiveStrength: (layer: LayerRef, value: any) => void,
  setTextEmissiveStrength: (layer: LayerRef, value: any) => void,
  setIconColor: (layer: LayerRef, value: any) => void,
  setIconHaloColor: (layer: LayerRef, value: any) => void,
  setIconHaloWidth: (layer: LayerRef, value: any) => void,
  setIconHaloBlur: (layer: LayerRef, value: any) => void,
  setIconTranslate: (layer: LayerRef, value: any) => void,
  setIconTranslateAnchor: (layer: LayerRef, value: any) => void,
  setIconImageCrossFade: (layer: LayerRef, value: any) => void,
  setTextOpacity: (layer: LayerRef, value: any) => void,
  setTextOcclusionOpacity: (layer: LayerRef, value: any) => void,
  setTextColor: (layer: LayerRef, value: any) => void,
  setTextHaloColor: (layer: LayerRef, value: any) => void,
  setTextHaloWidth: (layer: LayerRef, value: any) => void,
  setTextHaloBlur: (layer: LayerRef, value: any) => void,
  setTextTranslate: (layer: LayerRef, value: any) => void,
  setTextTranslateAnchor: (layer: LayerRef, value: any) => void,
  setIconColorSaturation: (layer: LayerRef, value: any) => void,
  setIconColorContrast: (layer: LayerRef, value: any) => void,
  setIconColorBrightnessMin: (layer: LayerRef, value: any) => void,
  setIconColorBrightnessMax: (layer: LayerRef, value: any) => void,
  setSymbolZOffset: (layer: LayerRef, value: any) => void,
  setRasterOpacity: (layer: LayerRef, value: any) => void,
  setRasterColor: (layer: LayerRef, value: any) => void,
  setRasterColorMix: (layer: LayerRef, value: any) => void,
  setRasterColorRange: (layer: LayerRef, value: any) => void,
  setRasterHueRotate: (layer: LayerRef, value: any) => void,
  setRasterBrightnessMin: (layer: LayerRef, value: any) => void,
  setRasterBrightnessMax: (layer: LayerRef, value: any) => void,
  setRasterSaturation: (layer: LayerRef, value: any) => void,
  setRasterContrast: (layer: LayerRef, value: any) => void,
  setRasterResampling: (layer: LayerRef, value: any) => void,
  setRasterFadeDuration: (layer: LayerRef, value: any) => void,
  setRasterEmissiveStrength: (layer: LayerRef, value: any) => void,
  setRasterArrayBand: (layer: LayerRef, value: any) => void,
  setRasterElevation: (layer: LayerRef, value: any) => void,
  setRasterParticleArrayBand: (layer: LayerRef, value: any) => void,
  setRasterParticleCount: (layer: LayerRef, value: any) => void,
  setRasterParticleColor: (layer: LayerRef, value: any) => void,
  setRasterParticleMaxSpeed: (layer: LayerRef, value: any) => void,
  setRasterParticleSpeedFactor: (layer: LayerRef, value: any) => void,
  setRasterParticleFadeOpacityFactor: (layer: LayerRef, value: any) => void,
  setRasterParticleResetRateFactor: (layer: LayerRef, value: any) => void,
  setRasterParticleElevation: (layer: LayerRef, value: any) => void,
  setHillshadeIlluminationDirection: (layer: LayerRef, value: any) => void,
  setHillshadeIlluminationAnchor: (layer: LayerRef, value: any) => void,
  setHillshadeExaggeration: (layer: LayerRef, value: any) => void,
  setHillshadeShadowColor: (layer: LayerRef, value: any) => void,
  setHillshadeHighlightColor: (layer: LayerRef, value: any) => void,
  setHillshadeAccentColor: (layer: LayerRef, value: any) => void,
  setHillshadeEmissiveStrength: (layer: LayerRef, value: any) => void,
  setBackgroundPitchAlignment: (layer: LayerRef, value: any) => void,
  setBackgroundColor: (layer: LayerRef, value: any) => void,
  setBackgroundPattern: (layer: LayerRef, value: any) => void,
  setBackgroundOpacity: (layer: LayerRef, value: any) => void,
  setBackgroundEmissiveStrength: (layer: LayerRef, value: any) => void,
  setSkyType: (layer: LayerRef, value: any) => void,
  setSkyAtmosphereSun: (layer: LayerRef, value: any) => void,
  setSkyAtmosphereSunIntensity: (layer: LayerRef, value: any) => void,
  setSkyGradientCenter: (layer: LayerRef, value: any) => void,
  setSkyGradientRadius: (layer: LayerRef, value: any) => void,
  setSkyGradient: (layer: LayerRef, value: any) => void,
  setSkyAtmosphereHaloColor: (layer: LayerRef, value: any) => void,
  setSkyAtmosphereColor: (layer: LayerRef, value: any) => void,
  setSkyOpacity: (layer: LayerRef, value: any) => void,
  setModelOpacity: (layer: LayerRef, value: any) => void,
  setModelRotation: (layer: LayerRef, value: any) => void,
  setModelScale: (layer: LayerRef, value: any) => void,
  setModelTranslation: (layer: LayerRef, value: any) => void,
  setModelColor: (layer: LayerRef, value: any) => void,
  setModelColorMixIntensity: (layer: LayerRef, value: any) => void,
  setModelType: (layer: LayerRef, value: any) => void,
  setModelCastShadows: (layer: LayerRef, value: any) => void,
  setModelReceiveShadows: (layer: LayerRef, value: any) => void,
  setModelAmbientOcclusionIntensity: (layer: LayerRef, value: any) => void,
  setModelEmissiveStrength: (layer: LayerRef, value: any) => void,
  setModelRoughness: (layer: LayerRef, value: any) => void,
  setModelHeightBasedEmissiveStrengthMultiplier: (layer: LayerRef, value: any) => void,
  setModelCutoffFadeRange: (layer: LayerRef, value: any) => void,
  setModelFrontCutoff: (layer: LayerRef, value: any) => void,
  setVisibility: (layer: LayerRef, value: any) => void,
  setModelId: (layer: LayerRef, value: any) => void,
  setClipLayerTypes: (layer: LayerRef, value: any) => void,
  setClipLayerScope: (layer: LayerRef, value: any) => void,
  setFillSortKey: (layer: LayerRef, value: any) => void,
  setFillElevationReference: (layer: LayerRef, value: any) => void,
  setCircleSortKey: (layer: LayerRef, value: any) => void,
  setFillExtrusionEdgeRadius: (layer: LayerRef, value: any) => void,
  setLineCap: (layer: LayerRef, value: any) => void,
  setLineJoin: (layer: LayerRef, value: any) => void,
  setLineMiterLimit: (layer: LayerRef, value: any) => void,
  setLineRoundLimit: (layer: LayerRef, value: any) => void,
  setLineSortKey: (layer: LayerRef, value: any) => void,
  setLineZOffset: (layer: LayerRef, value: any) => void,
  setLineElevationReference: (layer: LayerRef, value: any) => void,
  setLineCrossSlope: (layer: LayerRef, value: any) => void,
  setLineWidthUnit: (layer: LayerRef, value: any) => void,
  setSymbolPlacement: (layer: LayerRef, value: any) => void,
  setSymbolSpacing: (layer: LayerRef, value: any) => void,
  setSymbolAvoidEdges: (layer: LayerRef, value: any) => void,
  setSymbolSortKey: (layer: LayerRef, value: any) => void,
  setSymbolZOrder: (layer: LayerRef, value: any) => void,
  setSymbolZElevate: (layer: LayerRef, value: any) => void,
  setSymbolElevationReference: (layer: LayerRef, value: any) => void,
  setIconAllowOverlap: (layer: LayerRef, value: any) => void,
  setIconIgnorePlacement: (layer: LayerRef, value: any) => void,
  setIconOptional: (layer: LayerRef, value: any) => void,
  setIconRotationAlignment: (layer: LayerRef, value: any) => void,
  setIconSize: (layer: LayerRef, value: any) => void,
  setIconSizeScaleRange: (layer: LayerRef, value: any) => void,
  setIconTextFit: (layer: LayerRef, value: any) => void,
  setIconTextFitPadding: (layer: LayerRef, value: any) => void,
  setIconImage: (layer: LayerRef, value: any) => void,
  setIconRotate: (layer: LayerRef, value: any) => void,
  setIconPadding: (layer: LayerRef, value: any) => void,
  setIconKeepUpright: (layer: LayerRef, value: any) => void,
  setIconOffset: (layer: LayerRef, value: any) => void,
  setIconAnchor: (layer: LayerRef, value: any) => void,
  setIconPitchAlignment: (layer: LayerRef, value: any) => void,
  setTextPitchAlignment: (layer: LayerRef, value: any) => void,
  setTextRotationAlignment: (layer: LayerRef, value: any) => void,
  setTextField: (layer: LayerRef, value: any) => void,
  setTextFont: (layer: LayerRef, value: any) => void,
  setTextSize: (layer: LayerRef, value: any) => void,
  setTextSizeScaleRange: (layer: LayerRef, value: any) => void,
  setTextMaxWidth: (layer: LayerRef, value: any) => void,
  setTextLineHeight: (layer: LayerRef, value: any) => void,
  setTextLetterSpacing: (layer: LayerRef, value: any) => void,
  setTextJustify: (layer: LayerRef, value: any) => void,
  setTextRadialOffset: (layer: LayerRef, value: any) => void,
  setTextVariableAnchor: (layer: LayerRef, value: any) => void,
  setTextAnchor: (layer: LayerRef, value: any) => void,
  setTextMaxAngle: (layer: LayerRef, value: any) => void,
  setTextWritingMode: (layer: LayerRef, value: any) => void,
  setTextRotate: (layer: LayerRef, value: any) => void,
  setTextPadding: (layer: LayerRef, value: any) => void,
  setTextKeepUpright: (layer: LayerRef, value: any) => void,
  setTextTransform: (layer: LayerRef, value: any) => void,
  setTextOffset: (layer: LayerRef, value: any) => void,
  setTextAllowOverlap: (layer: LayerRef, value: any) => void,
  setTextIgnorePlacement: (layer: LayerRef, value: any) => void,
  setTextOptional: (layer: LayerRef, value: any) => void,
  getFillAntialias: (layer: LayerRef) => any,
  getFillOpacity: (layer: LayerRef) => any,
  getFillColor: (layer: LayerRef) => any,
  getFillOutlineColor: (layer: LayerRef) => any,
  getFillTranslate: (layer: LayerRef) => any,
  getFillTranslateAnchor: (layer: LayerRef) => any,
  getFillPattern: (layer: LayerRef) => any,
  getFillEmissiveStrength: (layer: LayerRef) => any,
  getFillZOffset: (layer: LayerRef) => any,
  getFillExtrusionOpacity: (layer: LayerRef) => any,
  getFillExtrusionColor: (layer: LayerRef) => any,
  getFillExtrusionTranslate: (layer: LayerRef) => any,
  getFillExtrusionTranslateAnchor: (layer: LayerRef) => any,
  getFillExtrusionPattern: (layer: LayerRef) => any,
  getFillExtrusionHeight: (layer: LayerRef) => any,
  getFillExtrusionBase: (layer: LayerRef) => any,
  getFillExtrusionHeightAlignment: (layer: LayerRef) => any,
  getFillExtrusionBaseAlignment: (layer: LayerRef) => any,
  getFillExtrusionVerticalGradient: (layer: LayerRef) => any,
  getFillExtrusionAmbientOcclusionIntensity: (layer: LayerRef) => any,
  getFillExtrusionAmbientOcclusionRadius: (layer: LayerRef) => any,
  getFillExtrusionAmbientOcclusionWallRadius: (layer: LayerRef) => any,
  getFillExtrusionAmbientOcclusionGroundRadius: (layer: LayerRef) => any,
  getFillExtrusionAmbientOcclusionGroundAttenuation: (layer: LayerRef) => any,
  getFillExtrusionFloodLightColor: (layer: LayerRef) => any,
  getFillExtrusionFloodLightIntensity: (layer: LayerRef) => any,
  getFillExtrusionFloodLightWallRadius: (layer: LayerRef) => any,
  getFillExtrusionFloodLightGroundRadius: (layer: LayerRef) => any,
  getFillExtrusionFloodLightGroundAttenuation: (layer: LayerRef) => any,
  getFillExtrusionVerticalScale: (layer: LayerRef) => any,
  getFillExtrusionRoundedRoof: (layer: LayerRef) => any,
  getFillExtrusionCutoffFadeRange: (layer: LayerRef) => any,
  getFillExtrusionEmissiveStrength: (layer: LayerRef) => any,
  getFillExtrusionLineWidth: (layer: LayerRef) => any,
  getFillExtrusionCastShadows: (layer: LayerRef) => any,
  getLineOpacity: (layer: LayerRef) => any,
  getLineColor: (layer: LayerRef) => any,
  getLineTranslate: (layer: LayerRef) => any,
  getLineTranslateAnchor: (layer: LayerRef) => any,
  getLineWidth: (layer: LayerRef) => any,
  getLineGapWidth: (layer: LayerRef) => any,
  getLineOffset: (layer: LayerRef) => any,
  getLineBlur: (layer: LayerRef) => any,
  getLineDasharray: (layer: LayerRef) => any,
  getLinePattern: (layer: LayerRef) => any,
  getLineGradient: (layer: LayerRef) => any,
  getLineTrimOffset: (layer: LayerRef) => any,
  getLineTrimFadeRange: (layer: LayerRef) => any,
  getLineTrimColor: (layer: LayerRef) => any,
  getLineEmissiveStrength: (layer: LayerRef) => any,
  getLineBorderWidth: (layer: LayerRef) => any,
  getLineBorderColor: (layer: LayerRef) => any,
  getLineOcclusionOpacity: (layer: LayerRef) => any,
  getCircleRadius: (layer: LayerRef) => any,
  getCircleColor: (layer: LayerRef) => any,
  getCircleBlur: (layer: LayerRef) => any,
  getCircleOpacity: (layer: LayerRef) => any,
  getCircleTranslate: (layer: LayerRef) => any,
  getCircleTranslateAnchor: (layer: LayerRef) => any,
  getCirclePitchScale: (layer: LayerRef) => any,
  getCirclePitchAlignment: (layer: LayerRef) => any,
  getCircleStrokeWidth: (layer: LayerRef) => any,
  getCircleStrokeColor: (layer: LayerRef) => any,
  getCircleStrokeOpacity: (layer: LayerRef) => any,
  getCircleEmissiveStrength: (layer: LayerRef) => any,
  getHeatmapRadius: (layer: LayerRef) => any,
  getHeatmapWeight: (layer: LayerRef) => any,
  getHeatmapIntensity: (layer: LayerRef) => any,
  getHeatmapColor: (layer: LayerRef) => any,
  getHeatmapOpacity: (layer: LayerRef) => any,
  getIconOpacity: (layer: LayerRef) => any,
  getIconOcclusionOpacity: (layer: LayerRef) => any,
  getIconEmissiveStrength: (layer: LayerRef) => any,
  getTextEmissiveStrength: (layer: LayerRef) => any,
  getIconColor: (layer: LayerRef) => any,
  getIconHaloColor: (layer: LayerRef) => any,
  getIconHaloWidth: (layer: LayerRef) => any,
  getIconHaloBlur: (layer: LayerRef) => any,
  getIconTranslate: (layer: LayerRef) => any,
  getIconTranslateAnchor: (layer: LayerRef) => any,
  getIconImageCrossFade: (layer: LayerRef) => any,
  getTextOpacity: (layer: LayerRef) => any,
  getTextOcclusionOpacity: (layer: LayerRef) => any,
  getTextColor: (layer: LayerRef) => any,
  getTextHaloColor: (layer: LayerRef) => any,
  getTextHaloWidth: (layer: LayerRef) => any,
  getTextHaloBlur: (layer: LayerRef) => any,
  getTextTranslate: (layer: LayerRef) => any,
  getTextTranslateAnchor: (layer: LayerRef) => any,
  getIconColorSaturation: (layer: LayerRef) => any,
  getIconColorContrast: (layer: LayerRef) => any,
  getIconColorBrightnessMin: (layer: LayerRef) => any,
  getIconColorBrightnessMax: (layer: LayerRef) => any,
  getSymbolZOffset: (layer: LayerRef) => any,
  getRasterOpacity: (layer: LayerRef) => any,
  getRasterColor: (layer: LayerRef) => any,
  getRasterColorMix: (layer: LayerRef) => any,
  getRasterColorRange: (layer: LayerRef) => any,
  getRasterHueRotate: (layer: LayerRef) => any,
  getRasterBrightnessMin: (layer: LayerRef) => any,
  getRasterBrightnessMax: (layer: LayerRef) => any,
  getRasterSaturation: (layer: LayerRef) => any,
  getRasterContrast: (layer: LayerRef) => any,
  getRasterResampling: (layer: LayerRef) => any,
  getRasterFadeDuration: (layer: LayerRef) => any,
  getRasterEmissiveStrength: (layer: LayerRef) => any,
  getRasterArrayBand: (layer: LayerRef) => any,
  getRasterElevation: (layer: LayerRef) => any,
  getRasterParticleArrayBand: (layer: LayerRef) => any,
  getRasterParticleCount: (layer: LayerRef) => any,
  getRasterParticleColor: (layer: LayerRef) => any,
  getRasterParticleMaxSpeed: (layer: LayerRef) => any,
  getRasterParticleSpeedFactor: (layer: LayerRef) => any,
  getRasterParticleFadeOpacityFactor: (layer: LayerRef) => any,
  getRasterParticleResetRateFactor: (layer: LayerRef) => any,
  getRasterParticleElevation: (layer: LayerRef) => any,
  getHillshadeIlluminationDirection: (layer: LayerRef) => any,
  getHillshadeIlluminationAnchor: (layer: LayerRef) => any,
  getHillshadeExaggeration: (layer: LayerRef) => any,
  getHillshadeShadowColor: (layer: LayerRef) => any,
  getHillshadeHighlightColor: (layer: LayerRef) => any,
  getHillshadeAccentColor: (layer: LayerRef) => any,
  getHillshadeEmissiveStrength: (layer: LayerRef) => any,
  getBackgroundPitchAlignment: (layer: LayerRef) => any,
  getBackgroundColor: (layer: LayerRef) => any,
  getBackgroundPattern: (layer: LayerRef) => any,
  getBackgroundOpacity: (layer: LayerRef) => any,
  getBackgroundEmissiveStrength: (layer: LayerRef) => any,
  getSkyType: (layer: LayerRef) => any,
  getSkyAtmosphereSun: (layer: LayerRef) => any,
  getSkyAtmosphereSunIntensity: (layer: LayerRef) => any,
  getSkyGradientCenter: (layer: LayerRef) => any,
  getSkyGradientRadius: (layer: LayerRef) => any,
  getSkyGradient: (layer: LayerRef) => any,
  getSkyAtmosphereHaloColor: (layer: LayerRef) => any,
  getSkyAtmosphereColor: (layer: LayerRef) => any,
  getSkyOpacity: (layer: LayerRef) => any,
  getModelOpacity: (layer: LayerRef) => any,
  getModelRotation: (layer: LayerRef) => any,
  getModelScale: (layer: LayerRef) => any,
  getModelTranslation: (layer: LayerRef) => any,
  getModelColor: (layer: LayerRef) => any,
  getModelColorMixIntensity: (layer: LayerRef) => any,
  getModelType: (layer: LayerRef) => any,
  getModelCastShadows: (layer: LayerRef) => any,
  getModelReceiveShadows: (layer: LayerRef) => any,
  getModelAmbientOcclusionIntensity: (layer: LayerRef) => any,
  getModelEmissiveStrength: (layer: LayerRef) => any,
  getModelRoughness: (layer: LayerRef) => any,
  getModelHeightBasedEmissiveStrengthMultiplier: (layer: LayerRef) => any,
  getModelCutoffFadeRange: (layer: LayerRef) => any,
  getModelFrontCutoff: (layer: LayerRef) => any,
  getVisibility: (layer: LayerRef) => any,
  getModelId: (layer: LayerRef) => any,
  getClipLayerTypes: (layer: LayerRef) => any,
  getClipLayerScope: (layer: LayerRef) => any,
  getFillSortKey: (layer: LayerRef) => any,
  getFillElevationReference: (layer: LayerRef) => any,
  getCircleSortKey: (layer: LayerRef) => any,
  getFillExtrusionEdgeRadius: (layer: LayerRef) => any,
  getLineCap: (layer: LayerRef) => any,
  getLineJoin: (layer: LayerRef) => any,
  getLineMiterLimit: (layer: LayerRef) => any,
  getLineRoundLimit: (layer: LayerRef) => any,
  getLineSortKey: (layer: LayerRef) => any,
  getLineZOffset: (layer: LayerRef) => any,
  getLineElevationReference: (layer: LayerRef) => any,
  getLineCrossSlope: (layer: LayerRef) => any,
  getLineWidthUnit: (layer: LayerRef) => any,
  getSymbolPlacement: (layer: LayerRef) => any,
  getSymbolSpacing: (layer: LayerRef) => any,
  getSymbolAvoidEdges: (layer: LayerRef) => any,
  getSymbolSortKey: (layer: LayerRef) => any,
  getSymbolZOrder: (layer: LayerRef) => any,
  getSymbolZElevate: (layer: LayerRef) => any,
  getSymbolElevationReference: (layer: LayerRef) => any,
  getIconAllowOverlap: (layer: LayerRef) => any,
  getIconIgnorePlacement: (layer: LayerRef) => any,
  getIconOptional: (layer: LayerRef) => any,
  getIconRotationAlignment: (layer: LayerRef) => any,
  getIconSize: (layer: LayerRef) => any,
  getIconSizeScaleRange: (layer: LayerRef) => any,
  getIconTextFit: (layer: LayerRef) => any,
  getIconTextFitPadding: (layer: LayerRef) => any,
  getIconImage: (layer: LayerRef) => any,
  getIconRotate: (layer: LayerRef) => any,
  getIconPadding: (layer: LayerRef) => any,
  getIconKeepUpright: (layer: LayerRef) => any,
  getIconOffset: (layer: LayerRef) => any,
  getIconAnchor: (layer: LayerRef) => any,
  getIconPitchAlignment: (layer: LayerRef) => any,
  getTextPitchAlignment: (layer: LayerRef) => any,
  getTextRotationAlignment: (layer: LayerRef) => any,
  getTextField: (layer: LayerRef) => any,
  getTextFont: (layer: LayerRef) => any,
  getTextSize: (layer: LayerRef) => any,
  getTextSizeScaleRange: (layer: LayerRef) => any,
  getTextMaxWidth: (layer: LayerRef) => any,
  getTextLineHeight: (layer: LayerRef) => any,
  getTextLetterSpacing: (layer: LayerRef) => any,
  getTextJustify: (layer: LayerRef) => any,
  getTextRadialOffset: (layer: LayerRef) => any,
  getTextVariableAnchor: (layer: LayerRef) => any,
  getTextAnchor: (layer: LayerRef) => any,
  getTextMaxAngle: (layer: LayerRef) => any,
  getTextWritingMode: (layer: LayerRef) => any,
  getTextRotate: (layer: LayerRef) => any,
  getTextPadding: (layer: LayerRef) => any,
  getTextKeepUpright: (layer: LayerRef) => any,
  getTextTransform: (layer: LayerRef) => any,
  getTextOffset: (layer: LayerRef) => any,
  getTextAllowOverlap: (layer: LayerRef) => any,
  getTextIgnorePlacement: (layer: LayerRef) => any,
  getTextOptional: (layer: LayerRef) => any
}